{
	"info": {
		"_postman_id": "6411a9f4-9b00-4264-9349-699d9fb91f7b",
		"name": "Tareas API",
		"description": "Colección de API para proyecto de Tareas, donde se utiliza métodos POST, PUT, GET, DEL.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23723469",
		"_collection_link": "https://winter-comet-853840.postman.co/workspace/2a72af0d-c4fe-4c54-aef0-8be5a894b6e2/collection/23723469-6411a9f4-9b00-4264-9349-699d9fb91f7b?action=share&source=collection_link&creator=23723469"
	},
	"item": [
		{
			"name": "Métodos",
			"item": [
				{
					"name": "Guardar",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Hablar con José\",\r\n    \"description\": \"Ingresamos a la meet\",\r\n    \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tasks"
							]
						},
						"description": "Este Endpoint te permite crear una nueva tarea al enviar una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un cuerpo de solicitud JSON en crudo con los siguientes parámetros:\n\n- title (cadena): El título de la tarea\n- description (cadena): La descripción de la tarea\n- completed (booleano): Indica si la tarea está completada o no\n    \n\n### Ejemplo de solicitud\n\n``` json\n{\n    \"title\": \"Realizar ejecución de pruebas\",\n    \"description\": \"Se deben realizar las pruebas correspondientes según....\",\n    \"completed\": true\n}\n\n ```\n\nTras una ejecución exitosa, el punto final devolverá una respuesta con un código de estado 200 y un tipo de contenido (Content-Type) de text/xml. El cuerpo de la respuesta contendrá los datos relacionados con la tarea recién creada.End"
					},
					"response": []
				},
				{
					"name": "Listar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response\r",
									"const responseJSON = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Verificar que hay una tarea con el título 'Crear documentación'\", function() {\r",
									"    const taskWithTitleTest = responseJSON.find(task => task.title === \"Crear documentación\");\r",
									"    pm.expect(taskWithTitleTest).to.not.be.undefined;\r",
									"});\r",
									"\r",
									"pm.test(\"Verificar el formato de la respuesta\", function() {\r",
									"    pm.expect(responseJSON).to.be.an('array');\r",
									"    pm.expect(responseJSON.length).to.be.greaterThan(0);\r",
									"    pm.expect(responseJSON[0]).to.have.property('id');\r",
									"    pm.expect(responseJSON[0]).to.have.property('title');\r",
									"    pm.expect(responseJSON[0]).to.have.property('description');\r",
									"    pm.expect(responseJSON[0]).to.have.property('completed');\r",
									"});\r",
									"\r",
									"pm.test(\"Verificar que todas las tareas están marcadas como no completadas\", function() {\r",
									"    responseJSON.forEach(task => {\r",
									"        pm.expect(task.completed).to.equal(false);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Funciona correctamente la CONEXIÓN\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/tasks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tasks"
							]
						},
						"description": "Si deseas obtener información sobre una tarea existente, puedes enviar una solicitud HTTP GET al punto final correspondiente. No es necesario proporcionar un cuerpo de solicitud en este caso. La solicitud simplemente busca obtener detalles sobre la tarea. Por ejemplo:\n\n``` json\n{\n    \"id\": 123,\n    \"title\": \"BackEnd y FrontEnd\",\n    \"description\": \"Realización de back y FrontEnd\",\n    \"completed\": true\n}\n\n ```\n\nEn este caso, la solicitud GET se utiliza para obtener información sobre la tarea identificada con el ID \"123\"."
					},
					"response": []
				},
				{
					"name": "Modificar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Crear documentación\",\r\n    \"description\": \"Realización de back y FrontEnd\",\r\n    \"completed\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tasks/48",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tasks",
								"48"
							]
						},
						"description": "Si deseas realizar una solicitud para modificar una tarea existente, puedes enviar una solicitud HTTP PUT al punto final correspondiente. La solicitud debe incluir un cuerpo de solicitud JSON con los parámetros que deseas actualizar. Por ejemplo:\n\n``` json\n{\n    \"title\": \"Nuevo Título\",\n    \"description\": \"Nueva descripción\",\n    \"completed\": false\n}\n\n ```\n\nEn este caso, la solicitud PATCH se utiliza para actualizar parcialmente la tarea existente, proporcionando solo los campos que necesitan ser modificados. El servidor procesará la solicitud y devolverá una respuesta indicando el resultado de la operación de modificación."
					},
					"response": []
				},
				{
					"name": "Eliminar",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/tasks/48",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tasks",
								"48"
							]
						},
						"description": "Para eliminar una tarea existente, puedes enviar una solicitud HTTP DELETE al punto final correspondiente. Al igual que con la solicitud GET, no es necesario proporcionar un cuerpo de solicitud para una solicitud DELETE. La solicitud simplemente indica al servidor que desea eliminar el recurso identificado. Por ejemplo:\n\n``` http\nDELETE /api/tasks/3\n\n ```\n\nDonde \"3\" es el identificador único de la tarea que deseas eliminar. El servidor procesará la solicitud y devolverá una respuesta con un código de estado que indicará el resultado de la operación de eliminación. Por lo general, se utilizará un código de estado 204 (No Content) para indicar que la eliminación se realizó con éxito sin devolver un cuerpo de respuesta.\n\n``` http\nHTTP/1.1 204 No Content\n\n ```\n\nEn este caso, la solicitud DELETE se utiliza para eliminar la tarea identificada con el ID \"3\"."
					},
					"response": []
				},
				{
					"name": "Modificar - Patch",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"completed\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/tasks/48",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"tasks",
								"48"
							]
						},
						"description": "Para realizar una operación de modificación parcial en una tarea existente mediante una solicitud HTTP PATCH, puedes enviar una solicitud al punto final correspondiente. La solicitud PATCH debe incluir un cuerpo de solicitud JSON con los campos que deseas actualizar. Por ejemplo:\n\n``` json\nPATCH /tasks/3\nContent-Type: application/json\n{\n    \"title\": \"Nuevo Título\",\n    \"description\": \"Nueva descripción\",\n    \"completed\": false\n}\n\n ```\n\nEn este caso, la solicitud PATCH indica al servidor que actualice parcialmente la tarea identificada con el ID \"3\". Los campos proporcionados en el cuerpo de la solicitud se actualizarán, mientras que los demás permanecerán sin cambios.\n\nEl servidor procesará la solicitud y devolverá una respuesta con un código de estado que indicará el resultado de la operación de modificación parcial. Por ejemplo:\n\n``` json\nHTTP/1.1 200 OK\nContent-Type: application/json\n{\n    \"id\": 3,\n    \"title\": \"Nuevo Título\",\n    \"description\": \"Nueva descripción\",\n    \"completed\": false\n}\n\n ```\n\nEn este ejemplo, la tarea identificada con el ID \"3\" ha sido actualizada parcialmente con los nuevos valores proporcionados en la solicitud PATCH."
					},
					"response": []
				}
			]
		}
	]
}